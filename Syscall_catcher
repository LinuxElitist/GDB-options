
#include <stdio.h>                                                                                                                          
                                                                                                                                            
int main(void)                                                                                                                              
{                                                                                                                                           
    char p1[] = "Sandeep";                                                                                                                      
    char *p2 = "Sundeep";                                                                                                                       
                                                                                                                                            
    printf("p1 is %s, p2 is %s\n", p1, p2);                                                                                                 
    return 0;                                                                                                                               
}


Run gdb and following set of options should help in catching syscalls.

sbk@donna:~/gdb$ gdb ./sys
GNU gdb (Ubuntu 7.12.50.20170314-0ubuntu1.1) 7.12.50.20170314-git
Copyright (C) 2017 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from ./sys...done.
(gdb) catch syscall mmap
Catchpoint 1 (syscall 'mmap' [9])
(gdb) r
Starting program: /home/sbk/gdb/sys 

Catchpoint 1 (call to syscall mmap), 0x00007ffff7df291a in __mmap (addr=addr@entry=0x0, len=len@entry=12288, prot=prot@entry=3, 
    flags=flags@entry=34, fd=fd@entry=-1, offset=offset@entry=0) at ../sysdeps/unix/sysv/linux/wordsize-64/mmap.c:34
34	../sysdeps/unix/sysv/linux/wordsize-64/mmap.c: No such file or directory.
(gdb) c
Continuing.

Catchpoint 1 (returned from syscall mmap), 0x00007ffff7df291a in __mmap (addr=addr@entry=0x0, len=len@entry=12288, prot=prot@entry=3, 
    flags=flags@entry=34, fd=fd@entry=-1, offset=offset@entry=0) at ../sysdeps/unix/sysv/linux/wordsize-64/mmap.c:34
34	in ../sysdeps/unix/sysv/linux/wordsize-64/mmap.c
(gdb) catch syscall 9
Catchpoint 2 (syscall 'mmap' [9])
(gdb) r
The program being debugged has been started already.
Start it from the beginning? (y or n) y
Starting program: /home/sbk/gdb/sys 

Catchpoint 1 (call to syscall mmap), 0x00007ffff7df291a in __mmap (addr=addr@entry=0x0, len=len@entry=12288, prot=prot@entry=3, 
    flags=flags@entry=34, fd=fd@entry=-1, offset=offset@entry=0) at ../sysdeps/unix/sysv/linux/wordsize-64/mmap.c:34
34	../sysdeps/unix/sysv/linux/wordsize-64/mmap.c: No such file or directory.
(gdb) c
Continuing.

Catchpoint 1 (returned from syscall mmap), 0x00007ffff7df291a in __mmap (addr=addr@entry=0x0, len=len@entry=12288, prot=prot@entry=3, 
    flags=flags@entry=34, fd=fd@entry=-1, offset=offset@entry=0) at ../sysdeps/unix/sysv/linux/wordsize-64/mmap.c:34
34	in ../sysdeps/unix/sysv/linux/wordsize-64/mmap.c
(gdb) c
Continuing.

Catchpoint 1 (call to syscall mmap), 0x00007ffff7df291a in __mmap (addr=addr@entry=0x0, len=141613, prot=prot@entry=1, 
    flags=flags@entry=2, fd=fd@entry=3, offset=offset@entry=0) at ../sysdeps/unix/sysv/linux/wordsize-64/mmap.c:34
34	in ../sysdeps/unix/sysv/linux/wordsize-64/mmap.c
(gdb) c
Continuing.

Catchpoint 1 (returned from syscall mmap), 0x00007ffff7df291a in __mmap (addr=addr@entry=0x0, len=141613, prot=prot@entry=1, 
    flags=flags@entry=2, fd=fd@entry=3, offset=offset@entry=0) at ../sysdeps/unix/sysv/linux/wordsize-64/mmap.c:34
34	in ../sysdeps/unix/sysv/linux/wordsize-64/mmap.c
(gdb) c
Continuing.

Catchpoint 1 (call to syscall mmap), 0x00007ffff7df291a in __mmap (addr=0x0, len=len@entry=3959200, prot=prot@entry=5, 
    flags=flags@entry=2050, fd=fd@entry=3, offset=0) at ../sysdeps/unix/sysv/linux/wordsize-64/mmap.c:34
34	in ../sysdeps/unix/sysv/linux/wordsize-64/mmap.c
(gdb) 
